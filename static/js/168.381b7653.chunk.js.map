{"version":3,"file":"static/js/168.381b7653.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAEMC,EAAS,CACbA,OAAQ,CACNC,QAJY,mCAKZC,SAAU,UAIDC,EAAiB,mCAAG,sGACRJ,EAAAA,EAAAA,IAAU,sBAAuBC,GADzB,uBACvBI,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNR,EAAAA,EAAAA,IAAA,iBAAoBQ,GAAWP,GADzB,uBACrBI,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAY,mCAAG,WAAMD,GAAN,yFACHR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,YAAuCP,GADpC,uBAClBI,EADkB,EAClBA,KADkB,kBAEnBA,EAAKK,MAFc,2CAAH,sDAKZC,EAAe,mCAAG,WAAMH,GAAN,yFACNR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,YAAuCP,GADjC,uBACrBI,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,sDAKfM,EAAc,mCAAG,WAAMC,GAAN,yFACLb,EAAAA,EAAAA,IAAA,8BAAiCa,GAASZ,GADrC,uBACpBI,EADoB,EACpBA,KADoB,kBAErBA,EAAKC,SAFgB,2CAAH,qD,sIC/B3B,EAA8B,6BAA9B,EAAoE,wB,SCuCpE,MAlCA,WACI,OAA8BQ,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQR,GAAYS,EAAAA,EAAAA,MAAZT,QAaR,OAXAU,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAgB,mCAAG,qGACMR,EAAAA,EAAAA,IAAgBH,GADtB,OACfY,EADe,OAErBJ,EAAWI,GAFU,2CAAH,qDAKtBD,GAEH,GAAE,CAACX,KAGA,yBACKO,EAAQM,OAAS,GAEV,eAAIC,UAAWC,EAAf,SACKR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,2BACI,cAAGL,UAAWC,EAAd,SAA2BG,KAC3B,uBAAIC,MAFCF,EADA,OAQpB,sEAIhB,C","sources":["api/theMovieApi.js","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c93df07230d9d2aaed10b113e03c4665';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day', params);\n  return data.results;\n}\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`, params);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`, params);\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, params);\n  return data.results;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await axios.get(`/search/movie?query=${query}`, params);\n  return data.results;\n};","// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Reviews_reviewsList__hDAQA\",\"author\":\"Reviews_author__CqYAZ\"};","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getMovieReviews } from \"api/theMovieApi\";\nimport css from './Reviews.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Reviews() {\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n\n        const loadMovieReviews = async () => {\n            const movieReviews = await getMovieReviews(movieId);\n            setReviews(movieReviews);\n        }\n\n        loadMovieReviews();\n\n    }, [movieId]);\n\n    return (\n        <div>\n            {reviews.length > 0\n                ? (\n                    <ul className={css.reviewsList}>\n                        {reviews.map(({ id, author, content }) => (\n                            <li key={id}>\n                                <p className={css.author}>{author}</p>\n                                <p>{content}</p>\n                            </li>\n                        ))}\n                    </ul>\n                ) :\n                (<p>We don't have any reviews for this movie.</p>)\n            }\n        </div>\n    );\n}\n\nexport default Reviews;\n\nReviews.propTypes = {\n    reviews: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            author: PropTypes.string.isRequired,\n            content: PropTypes.string.isRequired,\n        })\n    ),\n};"],"names":["axios","params","api_key","language","getTrendingMovies","data","results","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","getSearchMovie","query","useState","reviews","setReviews","useParams","useEffect","loadMovieReviews","movieReviews","length","className","css","map","id","author","content"],"sourceRoot":""}