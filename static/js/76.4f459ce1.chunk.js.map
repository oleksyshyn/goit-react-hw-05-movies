{"version":3,"file":"static/js/76.4f459ce1.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAEMC,EAAS,CACbA,OAAQ,CACNC,QAJY,mCAKZC,SAAU,UAIDC,EAAiB,mCAAG,sGACRJ,EAAAA,EAAAA,IAAU,sBAAuBC,GADzB,uBACvBI,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNR,EAAAA,EAAAA,IAAA,iBAAoBQ,GAAWP,GADzB,uBACrBI,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAY,mCAAG,WAAMD,GAAN,yFACHR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,YAAuCP,GADpC,uBAClBI,EADkB,EAClBA,KADkB,kBAEnBA,EAAKK,MAFc,2CAAH,sDAKZC,EAAe,mCAAG,WAAMH,GAAN,yFACNR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,YAAuCP,GADjC,uBACrBI,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,sDAKfM,EAAc,mCAAG,WAAMC,GAAN,yFACLb,EAAAA,EAAAA,IAAA,8BAAiCa,GAASZ,GADrC,uBACpBI,EADoB,EACpBA,KADoB,kBAErBA,EAAKC,SAFgB,2CAAH,qD,qIC/B3B,EAA2B,uBAA3B,EAA0D,oBAA1D,EAAqF,mBAArF,EAAoH,wB,SC6CpH,MAxCA,WACI,OAAwBQ,EAAAA,EAAAA,UAAS,IAAjC,eAAOJ,EAAP,KAAaK,EAAb,KACQP,GAAYQ,EAAAA,EAAAA,MAAZR,QAaR,OAXAS,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAa,mCAAG,qGACMT,EAAAA,EAAAA,IAAaD,GADnB,OACZW,EADY,OAElBJ,EAAQI,GAFU,2CAAH,qDAKnBD,GAEH,GAAE,CAACV,KAGA,yBACKE,EAAKU,OAAS,GAEP,eAAIC,UAAWC,EAAf,SACKZ,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACN,2BACI,gBACIC,IAAsB,OAAjBD,EAAA,yCAA0DA,GAAiB,GAChFE,IAAKJ,EACLJ,UAAWC,KAGf,cAAGD,UAAWC,EAAd,SAAyBG,KACzB,cAAGJ,UAAWC,EAAd,SAA8BI,MARzBF,EADH,OAcb,mEAIpB,C","sources":["api/theMovieApi.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c93df07230d9d2aaed10b113e03c4665';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day', params);\n  return data.results;\n}\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`, params);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`, params);\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, params);\n  return data.results;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await axios.get(`/search/movie?query=${query}`, params);\n  return data.results;\n};","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"image\":\"Cast_image__mOsuM\",\"name\":\"Cast_name__6UbFm\",\"character\":\"Cast_character__tKDlA\"};","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getMovieCast } from \"api/theMovieApi\";\nimport css from './Cast.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Cast() {\n    const [cast, setCast] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n\n        const loadMovieCast = async () => {\n            const movieCast = await getMovieCast(movieId);\n            setCast(movieCast);\n        }\n\n        loadMovieCast();\n\n    }, [movieId]);\n\n    return (\n        <div>\n            {cast.length > 0\n                ? (\n                    <ul className={css.castList}>\n                        {cast.map(({ id, name, character, profile_path }) => (\n                            <li key={id}>\n                                <img\n                                    src={profile_path !== null ? `https://image.tmdb.org/t/p/w500${profile_path}` : \"\"}\n                                    alt={name}\n                                    className={css.image}\n                                >\n                                </img>\n                                <p className={css.name}>{name}</p>\n                                <p className={css.character}>{character}</p>\n                            </li>\n                        ))}\n                    </ul>\n                ) : \n                    (<p>We don't have any cast for this movie.</p>)\n            }     \n        </div>\n    );\n}\n\nexport default Cast;\n\nCast.propTypes = {\n    cast: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            name: PropTypes.string.isRequired,\n            character: PropTypes.string.isRequired,\n            profile_path: PropTypes.string.isRequired,\n        })\n    ),\n};"],"names":["axios","params","api_key","language","getTrendingMovies","data","results","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","getSearchMovie","query","useState","setCast","useParams","useEffect","loadMovieCast","movieCast","length","className","css","map","id","name","character","profile_path","src","alt"],"sourceRoot":""}