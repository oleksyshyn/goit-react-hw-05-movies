{"version":3,"file":"static/js/588.ed947735.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAEMC,EAAS,CACbA,OAAQ,CACNC,QAJY,mCAKZC,SAAU,UAIDC,EAAiB,mCAAG,sGACRJ,EAAAA,EAAAA,IAAU,sBAAuBC,GADzB,uBACvBI,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNR,EAAAA,EAAAA,IAAA,iBAAoBQ,GAAWP,GADzB,uBACrBI,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAY,mCAAG,WAAMD,GAAN,yFACHR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,YAAuCP,GADpC,uBAClBI,EADkB,EAClBA,KADkB,kBAEnBA,EAAKK,MAFc,2CAAH,sDAKZC,EAAe,mCAAG,WAAMH,GAAN,yFACNR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,YAAuCP,GADjC,uBACrBI,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,sDAKfM,EAAc,mCAAG,WAAMC,GAAN,yFACLb,EAAAA,EAAAA,IAAA,8BAAiCa,GAASZ,GADrC,uBACpBI,EADoB,EACpBA,KADoB,kBAErBA,EAAKC,SAFgB,2CAAH,qD,8IC/B3B,EAAyB,uB,SCSzB,MANA,YAA8B,IAAZQ,EAAW,EAAXA,SACRC,GAAWC,EAAAA,EAAAA,MAEjB,OAAO,mBAAQC,UAAWC,EAAYC,QAAS,WAAO,IAAD,IAACJ,EAAQ,oBAACD,EAASM,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,IAAK,EAArF,oBACV,ECPD,EAA+B,mCAA/B,EAA8E,gCAA9E,EAAsH,4BAAtH,EAA+J,iCAA/J,EAAwM,4BAAxM,EAA8O,8BAA9O,EAA0R,kCAA1R,EAAmU,2BAAnU,EAAwW,8BCgExW,MA1DA,WACI,IAAQb,GAAYc,EAAAA,EAAAA,MAAZd,QACR,GAA0Be,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMX,GAAWY,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAOd,GAY3B,OAVAe,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAgB,mCAAG,qGACGvB,EAAAA,EAAAA,IAAgBC,GADnB,OACfuB,EADe,OAErBN,EAASM,GAFY,2CAAH,qDAKtBD,GACH,GAAE,CAACtB,IAECgB,GAGE,iCACH,SAAC,EAAD,CAAQV,SAAUa,EAAYK,WAC9B,iBAAKf,UAAWC,EAAhB,WACI,gBACIe,IAA4B,OAAtBT,EAAMU,YAAN,yCAA+DV,EAAMU,aAAgB,GAC3FC,IAAKX,EAAMY,MACXnB,UAAWC,KAEf,iBAAKD,UAAWC,EAAhB,WACI,wBAAKM,EAAMY,SACX,yCAAsC,GAArBZ,EAAMa,cAAmBC,QAAQ,GAAlD,QACA,sCACA,uBAAId,EAAMe,YACV,oCACA,eAAItB,UAAWC,EAAf,SACKM,EAAMgB,OAAOC,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAN,OACd,eAAa1B,UAAWC,EAAxB,SAAoCyB,GAA3BD,EADK,aAM9B,iBAAKzB,UAAWC,EAAhB,WACI,oDACA,gBAAID,UAAWC,EAAf,WACI,yBACI,SAAC,KAAD,CAAM0B,GAAG,OAAO3B,UAAWC,EAA3B,qBAEJ,yBACI,SAAC,KAAD,CAAM0B,GAAG,UAAU3B,UAAWC,EAA9B,8BAIZ,SAAC,EAAA2B,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,UAnCG,4CAsCd,C","sources":["api/theMovieApi.js","webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c93df07230d9d2aaed10b113e03c4665';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day', params);\n  return data.results;\n}\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`, params);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`, params);\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, params);\n  return data.results;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await axios.get(`/search/movie?query=${query}`, params);\n  return data.results;\n};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\"};","import { useNavigate } from 'react-router-dom';\nimport css from './Button.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Button ({location}) {\n    const navigate = useNavigate();\n    \n    return <button className={css.button} onClick={() => {navigate(location.state?.from ?? '/')}}>Go back</button>\n}\n\nexport default Button;\n\nButton.propTypes = {\n    location: PropTypes.shape(PropTypes.any.isRequired).isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__EqwEX\",\"movieInfo\":\"MovieDetails_movieInfo__XAfDM\",\"image\":\"MovieDetails_image__tPD8f\",\"genresList\":\"MovieDetails_genresList__iljfW\",\"genre\":\"MovieDetails_genre__cfw-I\",\"addInfo\":\"MovieDetails_addInfo__xdErv\",\"addInfoList\":\"MovieDetails_addInfoList__ubx6o\",\"cast\":\"MovieDetails_cast__DSRRH\",\"reviews\":\"MovieDetails_reviews__tdSgP\"};","import { useParams, Link, Outlet, useLocation } from \"react-router-dom\";\nimport { useState, useEffect, useRef, Suspense } from \"react\";\nimport { getMovieDetails } from \"api/theMovieApi\";\nimport Button from \"components/Button/Button\";\nimport css from './MovieDetails.module.css';\nimport PropTypes from 'prop-types';\n\nfunction MovieDetails() {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n\n    const location = useLocation();\n    const locationRef = useRef(location);\n\n    useEffect(() => {\n\n        const loadMovieDetails = async () => {\n            const movieData = await getMovieDetails(movieId);\n            setMovie(movieData);\n        }\n\n        loadMovieDetails();\n    }, [movieId]);\n\n    if (!movie) {\n        return <>Loading...</>\n    }\n    return <>\n        <Button location={locationRef.current} />\n        <div className={css.movieDetails}>\n            <img\n                src={ movie.poster_path !== null ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : \"\"}\n                alt={movie.title}\n                className={css.image}>\n            </img>\n            <div className={css.movieInfo}>\n                <h1>{movie.title}</h1>\n                <p>User score: {(movie.vote_average * 10).toFixed(0)}%</p>\n                <h2>Overview</h2>\n                <p>{movie.overview}</p>\n                <h3>Genres</h3>\n                <ul className={css.genresList}>\n                    {movie.genres.map(({id, name}) => (\n                        <li key={id} className={css.genre}>{name}</li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n        <div className={css.addInfo}>\n            <h2>Additional information</h2>\n            <ul className={css.addInfoList}>\n                <li>\n                    <Link to=\"cast\" className={css.cast}>Cast</Link>\n                </li>\n                <li>\n                    <Link to=\"reviews\" className={css.reviews}>Reviews</Link>\n                </li>\n            </ul>\n        </div>\n        <Suspense fallback={<div>Loading...</div>}>\n            <Outlet/>\n        </Suspense>\n    </>\n}\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n    movie: PropTypes.shape({\n        poster_path: PropTypes.string,\n        title: PropTypes.string.isRequired,\n        vote_average: PropTypes.number.isRequired,\n        overview: PropTypes.string.isRequired,\n        genres: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.number.isRequired,\n                name: PropTypes.string.isRequired,\n            })\n        ),\n    })\n};"],"names":["axios","params","api_key","language","getTrendingMovies","data","results","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","getSearchMovie","query","location","navigate","useNavigate","className","css","onClick","state","from","useParams","useState","movie","setMovie","useLocation","locationRef","useRef","useEffect","loadMovieDetails","movieData","current","src","poster_path","alt","title","vote_average","toFixed","overview","genres","map","id","name","to","Suspense","fallback"],"sourceRoot":""}